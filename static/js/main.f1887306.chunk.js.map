{"version":3,"sources":["components/SingleCard.jsx","utils/useLocalStorage.js","utils/breakPointsObserver.js","App.js","index.js"],"names":["SingleCard","image","handleChoice","flipped","disabled","scale","breakPoint","desktop","flex","tablet","laptop","mobile","console","log","imgScale","style","className","src","alt","onClick","useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","matchMediaQuery","breakPoints","setBreakpoints","Object","keys","matchMedia","matches","App","isBreakPoint","useEffect","addEventListener","breakPointsObserver","newArray","setNewArray","pokemonArray","setPokemonArray","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","setDisabled","level","setLevel","levelLength","setLevelLength","heder","setHeder","endThisRound","setEndThisRound","setScale","score","setScore","useMemo","pokemonGenerate","i","Math","floor","random","matched","shuffleCards","arrItem","randomPlace","dabbledArr","numberOfItems","length","shuffleArr","map","id","prevPokemon","pokemon","resetTurn","setTimeout","prevTurn","matchedChecker","every","clearTimeout","prevLevel","prevLevelLength","prevScale","prevScore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1887306.chunk.js","sourcesContent":["import React from 'react';\r\nimport './singleCard.css';\r\n\r\n\r\nconst SingleCard = ({\r\n    image,\r\n    handleChoice,\r\n    flipped,\r\n    disabled,\r\n    scale,\r\n    breakPoint\r\n\r\n}) => {\r\n\r\n    const handleClick = () => {\r\n        if (!disabled) {\r\n            handleChoice(image)\r\n        }\r\n    }\r\n\r\n    const desktop = { flex: `0 1 calc(18rem * ${scale})` }\r\n    const tablet = { flex: `0 1 calc(12rem * ${scale})` }\r\n    const laptop = { flex: `0 1 calc(14rem * ${scale})` }\r\n    const mobile = { flex: `0 1 calc(6rem * ${scale})` }\r\n\r\n    console.log(breakPoint)\r\n    const imgScale = { 'maxHeight': `calc(12.5rem * ${scale})`, 'maxWidth': `calc(16.625rem * ${scale})` }\r\n    return (\r\n        <div\r\n            style={\r\n                (breakPoint === 'mobile' && mobile) ||\r\n                (breakPoint === 'tablet' && tablet) ||\r\n                (breakPoint === 'laptop' && laptop) ||\r\n                (breakPoint === 'desktop' && desktop)\r\n\r\n            }\r\n            className=\"card\">\r\n            <div\r\n                className={flipped ? \"flipped\" : \"\"}\r\n            >\r\n                <img\r\n                    className=\"front\"\r\n                    src={image.src}\r\n                    alt='card front'\r\n                    style={imgScale}\r\n                />\r\n                <img\r\n                    className=\"back\"\r\n                    src=\"https://www.logopik.com/wp-content/uploads/edd/2018/07/Pokeball-Vector-Logo.png\"\r\n                    alt=\"card caver\"\r\n                    onClick={handleClick}\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default SingleCard\r\n","import { useState } from \"react\";\r\n\r\n// Hook\r\nfunction useLocalStorage(key, initialValue) {\r\n  // State to store our value\r\n  // Pass initial state function to useState so logic is only executed once\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    try {\r\n      // Get from local storage by key\r\n      const item = window.localStorage.getItem(key);\r\n      // Parse stored json or if none return initialValue\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      // If error also return initialValue\r\n      console.log(error);\r\n      return initialValue;\r\n    }\r\n  });\r\n  // Return a wrapped version of useState's setter function that ...\r\n  // ... persists the new value to localStorage.\r\n  const setValue = (value) => {\r\n    try {\r\n      // Allow value to be a function so we have same API as useState\r\n      const valueToStore =\r\n        value instanceof Function ? value(storedValue) : value;\r\n      // Save state\r\n      setStoredValue(valueToStore);\r\n      // Save to local storage\r\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n    } catch (error) {\r\n      // A more advanced implementation would handle the error case\r\n      console.log(error);\r\n    }\r\n  };\r\n  return [storedValue, setValue];\r\n}\r\nexport default useLocalStorage;","function matchMediaQuery(breakPoints, setBreakpoints) {\r\n    for (let key of Object.keys(breakPoints)){\r\n        if(window.matchMedia(`${breakPoints[key]}`).matches){\r\n            setBreakpoints(key)\r\n        }\r\n    }\r\n}\r\nexport default function breakPointsObserver(breakPoints, setBreakpoints) {\r\n    matchMediaQuery(breakPoints, setBreakpoints);\r\n\r\n    window.addEventListener('resize', () => {\r\n        matchMediaQuery(breakPoints, setBreakpoints);\r\n    })\r\n}","import React, { useState, useEffect, useMemo } from 'react';\nimport './App.css';\nimport SingleCard from './components/SingleCard';\nimport useLocalStorage from './utils/useLocalStorage';\nimport breakPointsObserver from './utils/breakPointsObserver'\n\nconst breakPoints = {\n  mobile: \"(max-width:600px)\",\n  tablet: \"(min-width:600px) and (max-width:769px)\",\n  laptop: \"(min-width:770px) and (max-width:1024px)\",\n  desktop: \"(min-width:1025px)\",\n}\n\nfunction App() {\n\n  const [breakPoint, isBreakPoint] = useState();\n  useEffect(()=>{\n    breakPointsObserver(breakPoints, isBreakPoint)\n  },[breakPoint]) //media query hook\n  \n  const [newArray, setNewArray] = useState([]);//Initial array \n  const [pokemonArray, setPokemonArray] = useState([]);// img array\n  const [turns, setTurns] = useState(0);\n\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n  const [disabled, setDisabled] = useState(false);\n\n  const [level, setLevel] = useLocalStorage('level', 1);\n  const [levelLength, setLevelLength] = useLocalStorage('levelLength', 3);//1/2 cards in the game\n  const [heder, setHeder] = useState(\"Memory Game\");//heder for the page\n\n  const [endThisRound, setEndThisRound] = useState(false);//end of the round = all cards open\n  const [scale, setScale] = useLocalStorage('scale', 1);//scale of the cards getting smaller etch round\n  const [score, setScore] = useLocalStorage('score', 0);\n\n\n  //generate the array of cards\n  useMemo(() => {\n    let pokemonGenerate = [];\n    for (let i = 0; i < levelLength; i++) {\n      pokemonGenerate[i] = {\n        src: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/${Math.floor((Math.random() * 648) + 1)}.svg`,\n        matched: false,\n      }\n    }\n    setNewArray(pokemonGenerate);\n  }, [levelLength])\n\n  // sorting the cards\n  const shuffleCards = () => {\n    let dabbledArr = [...newArray, ...newArray]\n    let numberOfItems = dabbledArr.length, arrItem, randomPlace;\n    // While there remain elements to shuffle…\n    while (numberOfItems) {\n      // Pick a remaining element…\n      randomPlace = Math.floor(Math.random() * numberOfItems--)\n      // And swap it with the current element.\n      arrItem = dabbledArr[numberOfItems];\n      dabbledArr[numberOfItems] = dabbledArr[randomPlace]\n      dabbledArr[randomPlace] = arrItem\n    }\n    const shuffleArr = dabbledArr.map(item => ({ ...item, id: Math.floor(Math.random() * 1000) }))\n    setPokemonArray(shuffleArr)\n    setTurns(0)\n    setChoiceOne(null)\n    setChoiceTwo(null)\n  }\n\n  //handle a choice\n  const handleChoice = (image) => {\n    choiceOne\n      ? setChoiceTwo(image)\n      : setChoiceOne(image)\n  }\n\n  //matching cards\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      setDisabled(true)\n      if (choiceOne.src === choiceTwo.src) {\n        setPokemonArray(prevPokemon => {\n          return prevPokemon.map(pokemon => {\n            if (pokemon.src === choiceOne.src) {\n              return { ...pokemon, matched: true }\n            } else {\n              return pokemon\n            }\n          })\n        })\n        resetTurn()\n      }\n      else {\n        setTimeout(() => resetTurn(), 1000)\n      }\n    }\n  }, [choiceOne, choiceTwo])\n\n\n  //setting for the new turn\n  const resetTurn = () => {\n    setChoiceOne(null)\n    setChoiceTwo(null)\n    setTurns(prevTurn => prevTurn + 1)\n    setDisabled(false)\n  }\n\n  //setting for the new level/round\n  const resetLevel = () => {\n    setChoiceOne(null)\n    setChoiceTwo(null)\n    setTurns(0)\n    setDisabled(false)\n  }\n\n  //Chekiang if this round is over and moving to the next round\n  useEffect(() => {\n    let matchedChecker = pokemonArray.every((pokemon) => {\n      return pokemon.matched === true\n    })\n\n    if (turns && matchedChecker === true) {\n      setTimeout(() => setEndThisRound(true), 3000)\n      setTimeout(() => setHeder(\"Good Job! Next Level\"), 1500)\n\n    }\n    return () => clearTimeout()\n  }, [pokemonArray, turns])\n\n  //starting new round more cards \n  useEffect(() => {\n    if (endThisRound) {\n      setEndThisRound(false)\n      resetLevel()\n      setLevel(prevLevel => prevLevel + 1)\n      setLevelLength(prevLevelLength => prevLevelLength + 1)\n      setScale(prevScale => prevScale - 0.075)\n      setScore(prevScore => prevScore + Math.floor(((pokemonArray.length / 2) / turns) * 100))\n      shuffleCards()\n    }\n  }, [endThisRound])\n\n  //starting the game automatically\n  useEffect(() => {\n    shuffleCards()\n    setTimeout(() => setHeder(\"\"), 3500)\n    return () => clearTimeout()\n\n  }, [levelLength])\n\n\n  return (\n    <div className=\"game\">\n      <div className=\"heder\"> {heder}</div>\n      <div className=\"game-data\">\n        <div>Turns: {turns}</div>\n        <div>Level: {level}</div>\n        <div>Score: {score}</div>\n      </div>\n\n      <div className=\"card-grid\">\n        {pokemonArray.map(pokemon => (\n          <SingleCard\n            image={pokemon}\n            key={pokemon.id}\n            handleChoice={handleChoice}\n            flipped={pokemon === choiceOne || pokemon === choiceTwo || pokemon.matched}\n            disabled={disabled}\n            scale={scale}\n            breakPoint={breakPoint}\n          />\n        ))}\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}